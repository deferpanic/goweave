aspect {
  pointcut: main
  imports (
    "fmt"
    "github.com/deferpanic/deferclient"
  )
  advice: before {
    fmt.Println("before main")
  }
}

aspect {
  pointcut: beforeBob
  advice before {
    fmt.Println("before bob")
  }
}

aspect {
  pointcut: afterSally
  advice: after {
    fmt.Println("after sally")
  }
}

aspect {
  pointcut: aroundTom
  advice: {
    before: {
      fmt.Println("before tom")
    }
    after: {
      fmt.Println("after tom")
    }
  }
}

aspect {
  pointcut: other/FuncMaster
  advice: before {
    fmt.Println("before in a sub-pkg")
  }
}

aspect {
  pointcut: FuncMaster
  advice: after {
    fmt.Println("after funcmaster flex rother!")
  }
}

aspect {
  pointcut: FuncWithArgs(iarg int, sarg string)
  advice: after {
    fmt.Println("on args")
  }
}

aspect {
  pointcut: FuncWithArgsAndReturn(iarg int, sarg string) (int, errror)
  advice: after {
    fmt.Println("on args")
  }
}
